{
  "@id": "dtmi:impinj:R700;132",
  "displayName": {
    "en": "Impinj R700"
  },
  "description": {
    "en": "R700 IoT Plug and Play Bridge"
  },
  "@context": [
    "dtmi:dtdl:context;2"
  ],
  "@type": "Interface",
  "contents": [
    {
      "@id": "dtmi:impinj:R700:Data:Stream;1",
      "@type": "Telemetry",
      "name": "ReaderEvent",
      "displayName": {
        "en": "Reader Event Data Stream"
      },
      "description": {
        "en": "Reader event data as an HTTP stream."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "hostname",
            "displayName": {
              "en": "Host Name"
            },
            "description": {
              "en": "The hostname of the reader that generated this event."
            },
            "schema": "string"
          },
          {
            "name": "timestamp",
            "displayName": {
              "en": "Time Stamp"
            },
            "description": {
              "en": "The UTC time at which the event was processed and queued for delivery."
            },
            "schema": "dateTime"
          },
          {
            "name": "tagInventoryEvent",
            "displayName": {
              "en": "Tag Inventory Event"
            },
            "description": {
              "en": "An event sent to deliver information about a tag read during inventory."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "epc",
                  "displayName": {
                    "en": "Epc"
                  },
                  "description": {
                    "en": "The base64url-encoded EPC of the tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "epcHex",
                  "displayName": {
                    "en": "Epc Hex"
                  },
                  "description": {
                    "en": "The hex-encoded EPC of the tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "tid",
                  "displayName": {
                    "en": "Tid"
                  },
                  "description": {
                    "en": "The base64url-encoded TID of the tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "tidHex",
                  "displayName": {
                    "en": "Tid Hex"
                  },
                  "description": {
                    "en": "The hex-encoded TID of the tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "antennaPort",
                  "displayName": {
                    "en": "Antenna Port"
                  },
                  "description": {
                    "en": "The port number of the antenna."
                  },
                  "schema": "integer"
                },
                {
                  "name": "antennaName",
                  "displayName": {
                    "en": "Antenna Name"
                  },
                  "description": {
                    "en": "Name for the antenna, if set reported in all tagInventoryEvents generated by the named antenna configuration."
                  },
                  "schema": "string"
                },
                {
                  "name": "transmitPowerCdbm",
                  "displayName": {
                    "en": "Transmit Power Cdbm"
                  },
                  "description": {
                    "en": "The transmit power used by the reader, specified in 25 cdBm increments."
                  },
                  "schema": "integer"
                },
                {
                  "name": "peakRssiCdbm",
                  "displayName": {
                    "en": "Peak RSSI Cdbm"
                  },
                  "description": {
                    "en": "The peak received power of the EPC backscatter in cdBm. We will give the client the opportunity to enable Impinj's high-precision mode to receive more accurate data."
                  },
                  "schema": "integer"
                },
                {
                  "name": "frequency",
                  "displayName": {
                    "en": "Frequency"
                  },
                  "description": {
                    "en": "The frequency that was used to read the tag, in kHz."
                  },
                  "schema": "integer"
                },
                {
                  "name": "pc",
                  "displayName": {
                    "en": "PC"
                  },
                  "description": {
                    "en": "The PC word (16-bits) backscattered by the inventoried tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "lastSeenTime",
                  "displayName": {
                    "en": "Last Seen Time"
                  },
                  "description": {
                    "en": "The UTC time at which the tag was last seen."
                  },
                  "schema": "dateTime"
                },
                {
                  "name": "tagAuthenticationResponse",
                  "displayName": {
                    "en": "Tag Authentication Response"
                  },
                  "description": {
                    "en": "The response to an authentication challenge for the tag."
                  },
                  "schema": {
                    "@type": "Object",
                    "fields": [
                      {
                        "name": "messageHex",
                        "displayName": {
                          "en": "Message Hex"
                        },
                        "description": {
                          "en": "The challenge message that was sent to the tag."
                        },
                        "schema": "string"
                      },
                      {
                        "name": "responseHex",
                        "displayName": {
                          "en": "Response Hex"
                        },
                        "description": {
                          "en": "The authentication response that was received from the tag. If a value other than success was received from the tag, responseHex will contain an empty string."
                        },
                        "schema": "string"
                      },
                      {
                        "name": "tidHex",
                        "displayName": {
                          "en": "Tid Hex"
                        },
                        "description": {
                          "en": "Present if 64 bits of TID information, which excludes TID words 0 and 2, was returned with the authentication response received from the tag."
                        },
                        "schema": "string"
                      }
                    ]
                  }
                },
                {
                  "name": "tagMemoryData",
                  "displayName": {
                    "en": "Tag Memory Data"
                  },
                  "description": {
                    "en": "Represents a block of tag memory that was read."
                  },
                  "schema": {
                    "@type": "Array",
                    "elementSchema": {
                      "@type": "Object",
                      "fields": [
                        {
                          "name": "memoryBank",
                          "displayName": {
                            "en": "Tag Memory Bank"
                          },
                          "description": {
                            "en": "The different memory banks that can potentially be read from a tag."
                          },
                          "schema": "string"
                        },
                        {
                          "name": "wordOffset",
                          "displayName": {
                            "en": "Word Offset"
                          },
                          "description": {
                            "en": "The offset, in 16-bit words, relative to the start of the specified memory bank, from where the memory was read."
                          },
                          "schema": "integer"
                        },
                        {
                          "name": "tagDataHex",
                          "displayName": {
                            "en": "Tag Data Hex"
                          },
                          "description": {
                            "en": "The hex-encoded contents of the tag's memory. An empty string is sent by the device if the tag memory read was not successful."
                          },
                          "schema": "string"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "name": "antennaConnectedEvent",
            "displayName": {
              "en": "Antenna Connected Event"
            },
            "description": {
              "en": "An event sent when the specified antenna port is determined to be connected. The event is delivered only when the antenna changes to this state and has built-in hysteresis."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "antennaPort",
                  "displayName": {
                    "en": "Antenna Port"
                  },
                  "description": {
                    "en": "The port number of the antenna."
                  },
                  "schema": "integer"
                }
              ]
            }
          },
          {
            "name": "antennaDisconnectedEvent",
            "displayName": {
              "en": "Antenna Disconnected Event"
            },
            "description": {
              "en": "An event sent when the specified antenna port is determined to be disconnected. The event is delivered only when the antenna changes to this state and has built-in hysteresis."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "antennaPort",
                  "displayName": {
                    "en": "Antenna Port"
                  },
                  "description": {
                    "en": "The port number of the antenna."
                  },
                  "schema": "integer"
                }
              ]
            }
          },
          {
            "name": "inventoryStatusEvent",
            "displayName": {
              "en": "Inventory Status Event"
            },
            "description": {
              "en": "An event sent to deliver a change in the state of the current InventoryRequest."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "status",
                  "displayName": {
                    "en": "Status"
                  },
                  "description": {
                    "en": "The new state of the InventoryRequest."
                  },
                  "schema": {
                    "@type": "Enum",
                    "valueSchema": "string",
                    "enumValues": [
                      {
                        "name": "idle",
                        "enumValue": "idle",
                        "displayName": {
                          "en": "Idle"
                        }
                      },
                      {
                        "name": "running",
                        "enumValue": "running",
                        "displayName": {
                          "en": "Runnning"
                        }
                      },
                      {
                        "name": "armed",
                        "enumValue": "armed",
                        "displayName": {
                          "en": "Armed"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "inventoryTerminatedEvent",
            "displayName": {
              "en": "Inventory Terminaed Event"
            },
            "description": {
              "en": "An empty event sent to indicate that the InventoryRequest terminated due to a reader exception."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "dummy",
                  "displayName": {
                    "en": "Dummy"
                  },
                  "description": {
                    "en": "An empty event."
                  },
                  "schema": "string"
                }
              ]
            }
          },
          {
            "name": "diagnosticEvent",
            "displayName": {
              "en": "Diagnostic Event"
            },
            "description": {
              "en": "An empty event sent to indicate that the InventoryRequest terminated due to a reader exception."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "data",
                  "displayName": {
                    "en": "Data"
                  },
                  "description": {
                    "en": "Contains diagnostic information."
                  },
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "integer"
                  }
                }
              ]
            }
          },
          {
            "name": "overflowEvent",
            "displayName": {
              "en": "Overflow Event"
            },
            "description": {
              "en": "An empty event sent to indicate that the InventoryRequest terminated due to a reader exception."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "firstEventTimestamp",
                  "displayName": {
                    "en": "First Event Timestamp"
                  },
                  "description": {
                    "en": "The timestamp of the first event that was purged from the buffer."
                  },
                  "schema": "dateTime"
                },
                {
                  "name": "lastEventTimestamp",
                  "displayName": {
                    "en": "Last Event Timestamp"
                  },
                  "description": {
                    "en": "The timestamp of the last event that was purged from the buffer"
                  },
                  "schema": "dateTime"
                },
                {
                  "name": "eventsPurged",
                  "displayName": {
                    "en": "Events Purged"
                  },
                  "description": {
                    "en": "The number of events that were purged from the buffer."
                  },
                  "schema": "integer"
                },
                {
                  "name": "eventsRemaining",
                  "displayName": {
                    "en": "Events Remaining"
                  },
                  "description": {
                    "en": "The number of events that remained in the buffer after it was purged."
                  },
                  "schema": "integer"
                }
              ]
            }
          },
          {
            "name": "tagLocationEntryEvent",
            "displayName": {
              "en": "Tag Location Entry Event"
            },
            "description": {
              "en": "Contains tag location data."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "epc",
                  "displayName": {
                    "en": "EPC"
                  },
                  "description": {
                    "en": "The base64url-encoded EPC of the tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "lastSeenTime",
                  "displayName": {
                    "en": "Last Seen Time"
                  },
                  "description": {
                    "en": "The UTC time at which the tag was last seen."
                  },
                  "schema": "dateTime"
                },
                {
                  "name": "xCm",
                  "displayName": {
                    "en": "xCm"
                  },
                  "description": {
                    "en": "The x coordinate of the tag location."
                  },
                  "schema": "integer"
                },
                {
                  "name": "yCm",
                  "displayName": {
                    "en": "yCm"
                  },
                  "description": {
                    "en": "The y coordinate of the tag location."
                  },
                  "schema": "integer"
                },
                {
                  "name": "confidenceMetric",
                  "displayName": {
                    "en": "Confidence Metric"
                  },
                  "description": {
                    "en": "A metric of the quality of the location estimate."
                  },
                  "schema": "integer"
                },
                {
                  "name": "confidenceData",
                  "displayName": {
                    "en": "Confidence Data"
                  },
                  "description": {
                    "en": "Impinj proprietary location confidence data."
                  },
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "integer"
                  }
                }
              ]
            }
          },
          {
            "name": "tagLocationUpdateEvent",
            "displayName": {
              "en": "Tag Location Update Event"
            },
            "description": {
              "en": "Contains tag location data."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "epc",
                  "displayName": {
                    "en": "EPC"
                  },
                  "description": {
                    "en": "The base64url-encoded EPC of the tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "lastSeenTime",
                  "displayName": {
                    "en": "Last Seen Time"
                  },
                  "description": {
                    "en": "The UTC time at which the tag was last seen."
                  },
                  "schema": "dateTime"
                },
                {
                  "name": "xCm",
                  "displayName": {
                    "en": "xCm"
                  },
                  "description": {
                    "en": "The x coordinate of the tag location."
                  },
                  "schema": "integer"
                },
                {
                  "name": "yCm",
                  "displayName": {
                    "en": "yCm"
                  },
                  "description": {
                    "en": "The y coordinate of the tag location."
                  },
                  "schema": "integer"
                },
                {
                  "name": "confidenceMetric",
                  "displayName": {
                    "en": "Confidence Metric"
                  },
                  "description": {
                    "en": "A metric of the quality of the location estimate."
                  },
                  "schema": "integer"
                },
                {
                  "name": "confidenceData",
                  "displayName": {
                    "en": "Confidence Data"
                  },
                  "description": {
                    "en": "Impinj proprietary location confidence data."
                  },
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "integer"
                  }
                }
              ]
            }
          },
          {
            "name": "tagLocationExitEvent",
            "displayName": {
              "en": "Tag Location Exit Event"
            },
            "description": {
              "en": "Contains tag location data."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "epc",
                  "displayName": {
                    "en": "EPC"
                  },
                  "description": {
                    "en": "The base64url-encoded EPC of the tag."
                  },
                  "schema": "string"
                },
                {
                  "name": "lastSeenTime",
                  "displayName": {
                    "en": "Last Seen Time"
                  },
                  "description": {
                    "en": "The UTC time at which the tag was last seen."
                  },
                  "schema": "dateTime"
                },
                {
                  "name": "xCm",
                  "displayName": {
                    "en": "xCm"
                  },
                  "description": {
                    "en": "The x coordinate of the tag location."
                  },
                  "schema": "integer"
                },
                {
                  "name": "yCm",
                  "displayName": {
                    "en": "yCm"
                  },
                  "description": {
                    "en": "The y coordinate of the tag location."
                  },
                  "schema": "integer"
                },
                {
                  "name": "confidenceMetric",
                  "displayName": {
                    "en": "Confidence Metric"
                  },
                  "description": {
                    "en": "A metric of the quality of the location estimate."
                  },
                  "schema": "integer"
                },
                {
                  "name": "confidenceData",
                  "displayName": {
                    "en": "Confidence Data"
                  },
                  "description": {
                    "en": "Impinj proprietary location confidence data."
                  },
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "integer"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:Status:Property;1",
      "@type": "Property",
      "name": "ReaderStatus",
      "writable": false,
      "comment": "GET /status",
      "displayName": {
        "en": "Reader Status"
      },
      "description": {
        "en": "The reader's current status."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "activePreset",
            "displayName": {
              "en": "Active Presets"
            },
            "description": {
              "en": "The running preset. If no preset is running, this property is not included in the status response."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "id",
                  "displayName": {
                    "en": "Preset ID"
                  },
                  "description": {
                    "en": "The profile preset identifier."
                  },
                  "schema": "string"
                },
                {
                  "name": "profile",
                  "displayName": {
                    "en": "Profile"
                  },
                  "description": {
                    "en": "The profile preset identifier."
                  },
                  "schema": "string"
                }
              ]
            }
          },
          {
            "name": "deviceStatus",
            "displayName": {
              "en": "Status"
            },
            "description": {
              "en": "Indicates whether an RFID operation is currently running on the reader (running), is currently not running an RFID operation, but is waiting to be triggered (armed), or is not running an RFID operation and is not waiting to be triggered (idle)."
            },
            "schema": {
              "@type": "Enum",
              "valueSchema": "string",
              "enumValues": [
                {
                  "name": "running",
                  "enumValue": "running",
                  "displayName": {
                    "en": "Running"
                  }
                },
                {
                  "name": "armed",
                  "enumValue": "armed",
                  "displayName": {
                    "en": "Armed"
                  }
                },
                {
                  "name": "idle",
                  "enumValue": "idle",
                  "displayName": {
                    "en": "Idle"
                  }
                }
              ]
            }
          },
          {
            "name": "time",
            "displayName": {
              "en": "System Time"
            },
            "description": {
              "en": "The current, system time on the reader."
            },
            "schema": "dateTime"
          },
          {
            "name": "serialNumber",
            "displayName": {
              "en": "Serial Number"
            },
            "description": {
              "en": "The serial number of the reader."
            },
            "schema": "string"
          },
          {
            "name": "mqttBrokerConnectionStatus",
            "displayName": {
              "en": "MQTT Broker Connection Status"
            },
            "description": {
              "en": "The connection status to the MQTT broker."
            },
            "schema": {
              "@type": "Enum",
              "valueSchema": "string",
              "enumValues": [
                {
                  "name": "connected",
                  "enumValue": "connected",
                  "displayName": {
                    "en": "Connected"
                  }
                },
                {
                  "name": "disconnected",
                  "enumValue": "disconnected",
                  "displayName": {
                    "en": "Disconnected"
                  }
                }
              ]
            }
          },
          {
            "name": "mqttTlsAuthentication",
            "displayName": {
              "en": "MQTT TLS Authentication"
            },
            "description": {
              "en": "The Secure-MQTT authentication and encryption status. none server not authenticated, no encryption. server server authenticated, TLS encryption."
            },
            "schema": {
              "@type": "Enum",
              "valueSchema": "string",
              "enumValues": [
                {
                  "name": "none",
                  "enumValue": "none",
                  "displayName": {
                    "en": "Server Not Authenticated"
                  }
                },
                {
                  "name": "server",
                  "enumValue": "server",
                  "displayName": {
                    "en": "Server Authenticated, TSL Encryption"
                  }
                }
              ]
            }
          },
          {
            "name": "kafkaClusterConnectionStatus",
            "displayName": {
              "en": "Kafka Cluster Connection Status"
            },
            "description": {
              "en": "The connection status to the Kafka cluster. connected The device is connected to at least one broker in the Kafka cluster. disconnected The device is not connected to any brokers within the Kafka cluster."
            },
            "schema": {
              "@type": "Enum",
              "valueSchema": "string",
              "enumValues": [
                {
                  "name": "connected",
                  "enumValue": "connected",
                  "displayName": {
                    "en": "The device is connected to the Kafka cluster"
                  }
                },
                {
                  "name": "disconnected",
                  "enumValue": "disconnected",
                  "displayName": {
                    "en": "The device is not connected"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:Status:Command;1",
      "@type": "Command",
      "name": "GetReaderStatus",
      "comment": "GET /status",
      "displayName": {
        "en": "Retrieve Reader Status"
      },
      "description": {
        "en": "Retrieve the reader's current status."
      },
      "response": {
        "@type": "CommandPayload",
        "name": "ReaderStatus",
        "schema": "dtmi:impinj:R700:Status;1"
      }
    },
    {
      "@id": "dtmi:impinj:R700:HttpStream;1",
      "@type": "Property",
      "name": "StreamConfiguration",
      "writable": true,
      "comment": "GET and PUT /http-stream",
      "displayName": {
        "en": "HTTP stream settings"
      },
      "description": {
        "en": "The configuration settings that apply to all HTTP streams."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "eventBufferSize",
            "displayName": {
              "en": "Event Buffer Size"
            },
            "description": {
              "en": "Number of events that can be stored on the reader waiting for future delivery. If the bufferSize is 0 then no buffer is created and no history will be saved."
            },
            "schema": "integer"
          },
          {
            "name": "eventPerSecondLimit",
            "displayName": {
              "en": "Event Per Second Limit"
            },
            "description": {
              "en": "Maximum number of events that may be delivered per second. This setting can be used to throttle the delivery of events during peak transmission times such as when replaying history during a new connection. Care should be taken to not set this value lower than the normal event generation rate of the reader or the queue attached to the HTTP stream will fill up and events will be purged. A value of Zero (0) means that no eventsPerSecondLimit is applied."
            },
            "schema": "integer"
          },
          {
            "name": "eventAgeLimitMinutes",
            "displayName": {
              "en": "Event Age Limit Muniutes"
            },
            "description": {
              "en": "Maximum age of any event in the history buffer. Any event older than this will be purged automatically from the buffer without the generation of an OverflowEvent. Use this value to configure the maximum event lifetime for the history buffer."
            },
            "schema": "integer"
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:Mqtt;1",
      "@type": "Property",
      "name": "MqttConfiguration",
      "writable": true,
      "comment": "GET and PUT /mqtt",
      "displayName": {
        "en": "MQTT Settings"
      },
      "description": {
        "en": "The current MQTT configuration settings for publishing data to an MQTT broker."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "active",
            "displayName": {
              "en": "Active"
            },
            "description": {
              "en": "Used to enable or disable MQTT output."
            },
            "schema": "boolean"
          },
          {
            "name": "brokerHostname",
            "displayName": {
              "en": "Broker Host Name"
            },
            "description": {
              "en": "The hostname to use for connecting to the MQTT broker."
            },
            "schema": "string"
          },
          {
            "name": "brokerPort",
            "displayName": {
              "en": "Broker Port"
            },
            "description": {
              "en": "The TCP port to use for connecting to the MQTT broker."
            },
            "schema": "integer"
          },
          {
            "name": "cleanSession",
            "displayName": {
              "en": "Clean Session"
            },
            "description": {
              "en": "This flag is used for determining the client's session type. When set to true, the broker will remove all information about this device when it disconnects. When set to false, the broker considers this device to be a durable client and preserves the appropriate state across client sessions."
            },
            "schema": "boolean"
          },
          {
            "name": "clientId",
            "displayName": {
              "en": "Client ID"
            },
            "description": {
              "en": "A string used to uniquely identify this device to the MQTT broker. This identifier is used for session management, allowing clients to be durable across several disconnects and reconnects."
            },
            "schema": "string"
          },
          {
            "name": "eventBufferSize",
            "displayName": {
              "en": "Event buffer size"
            },
            "description": {
              "en": "Number of events that can be stored on the reader waiting for delivery to the MQTT broker."
            },
            "schema": "integer"
          },
          {
            "name": "eventPerSecondLimit",
            "displayName": {
              "en": "Event per Second Limit"
            },
            "description": {
              "en": "Maximum number of events that may be delivered per second. This setting can be used to throttle the delivery of events during peak transmission times such as recovery after a network outage. Care should be taken to not set this value lower than the normal event generation rate of the reader or the queue will fill up and events will be purged. A value of Zero (0) means that no eventsPerSecondLimit is applied."
            },
            "schema": "integer"
          },
          {
            "name": "eventPendingDeliveryLimit",
            "displayName": {
              "en": "Event Pending Delivery Limit"
            },
            "description": {
              "en": "Maximum number of events concurrently processed by the mqtt delivery layer. When eventQualityOfService is greater than Zero (0) this will limit the rate of delivery to the MQTT broker."
            },
            "schema": "integer"
          },
          {
            "name": "eventQualityOfService",
            "displayName": {
              "en": "Event QoS"
            },
            "description": {
              "en": "The QoS level of the MQTT connection. "
            },
            "schema": "dtmi:impinj:R700:Mqtt:QoS;1"
          },
          {
            "name": "eventTopic",
            "displayName": {
              "en": "Event Topic"
            },
            "description": {
              "en": "The base topic where the device will publish events."
            },
            "schema": "string"
          },
          {
            "name": "keepAliveIntervalSeconds",
            "displayName": {
              "en": "Keep Alive Interval in Seconds"
            },
            "description": {
              "en": "Specifies how often the device should check-in with the broker by sending a control packet."
            },
            "schema": "integer"
          },
          {
            "name": "username",
            "displayName": {
              "en": "User Name"
            },
            "description": {
              "en": "The username to use when authenticating with the broker."
            },
            "schema": "string"
          },
          {
            "name": "password",
            "displayName": {
              "en": "Password"
            },
            "description": {
              "en": "The password to use when authenticating with the broker."
            },
            "schema": "string"
          },
          {
            "name": "willTopic",
            "displayName": {
              "en": "Will Topic"
            },
            "description": {
              "en": "The topic where the Last Will and Testament will be published. If this is provided a willMessage must also be provided."
            },
            "schema": "string"
          },
          {
            "name": "willMessage",
            "displayName": {
              "en": "Will Message"
            },
            "description": {
              "en": "The message contents of the device's Last Will and Testament. If this is provided a willTopic must also be provided."
            },
            "schema": "string"
          },
          {
            "name": "willQualityOfService",
            "displayName": {
              "en": "Will Quality of Service"
            },
            "description": {
              "en": "The QoS to use when publishing this device's “Last Will and Testament.” See eventQualityOfService for details on how the different quality of service levels affect message transmission."
            },
            "schema": "dtmi:impinj:R700:Mqtt:QoS;1"
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:Kafka;1",
      "@type": "Property",
      "name": "KafkaConfiguration",
      "writable": true,
      "comment": "TODO GET and PUT /kafka",
      "displayName": {
        "en": "Kafka Settings"
      },
      "description": {
        "en": "The current Kafka configuration settings for pushing messages to a Kafka broker."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "active",
            "displayName": {
              "en": "Active"
            },
            "description": {
              "en": "Used to enable or disable Kafka output."
            },
            "schema": "boolean"
          },
          {
            "name": "bootstraps",
            "displayName": {
              "en": "bootstraps"
            },
            "description": {
              "en": "A list of Kafka bootstrap server configurations to connect and push messages to. Device will connect to broker and utilize metadata to determine additional brokers within the cluster that aren't included in this list."
            },
            "schema": {
              "@type": "Map",
              "mapKey": {
                "name": "Key",
                "schema": "string"
              },
              "mapValue": {
                "name": "Value",
                "schema": "dtmi:impinj:R700:Kafka:KafkaBootstrapServerConfiguration;1"
              }
            }
          },
          {
            "name": "clientId",
            "displayName": {
              "en": "Client ID"
            },
            "description": {
              "en": "A string used to uniquely identify this device to the Kafka broker."
            },
            "schema": "string"
          },
          {
            "name": "eventTopic",
            "displayName": {
              "en": "Event Topic"
            },
            "description": {
              "en": "The base topic where the device will publish events."
            },
            "schema": "string"
          },
          {
            "name": "partitionKey",
            "displayName": {
              "en": "Partition Key"
            },
            "description": {
              "en": "A string specifying the message key, used for partitioning. If this is not specified, will randomly select partition."
            },
            "schema": "string"
          },
          {
            "name": "eventBatchLimit",
            "displayName": {
              "en": "Event Batch Limit"
            },
            "description": {
              "en": "An integer specifying maximum number of events/messages batched in one message set. The eventBatchLingerMilliseconds value and the client's internal buffer size will impact actual number of messages contained within one message set."
            },
            "schema": "integer"
          },
          {
            "name": "eventBatchLingerMilliseconds",
            "displayName": {
              "en": "Event Batch Linger Milliseconds"
            },
            "description": {
              "en": "An integer specifying the amount of time, in milliseconds, to wait to send batch messages when eventBatchLimit has not yet been reached. A value of 0 will send each message as it is available."
            },
            "schema": "integer"
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles;1",
      "@type": "Property",
      "name": "Profiles",
      "writable": false,
      "comment": "TODO GET /profiles",
      "displayName": {
        "en": "Profiles"
      },
      "description": {
        "en": "Retrieves the profiles (e.g. inventory, location, and direction) supported by this reader."
      },
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "Profile",
          "schema": "string"
        },
        "mapValue": {
          "name": "ProfileName",
          "schema": "string"
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Stop;1",
      "@type": "Command",
      "name": "StopPreset",
      "comment": "POST /profiles/stop",
      "displayName": {
        "en": "Stop Profile"
      },
      "description": {
        "en": "Stops the currently running profile preset. If no preset is currently running, this is a no-op."
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets;1",
      "@type": "Command",
      "name": "Presets",
      "comment": "GET /profiles/inventory/presets",
      "displayName": {
        "en": "Retrieve inventory presets"
      },
      "description": {
        "en": "Retrieves the available presets for running inventory."
      },
      "response": {
        "@type": "CommandPayload",
        "name": "PresetsIds",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "presetIds",
              "displayName": "Preset IDs",
              "description": "List of Preset IDs",
              "schema": {
                "@type": "Array",
                "elementSchema": "string"
              }
            }
          ]
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetId:Get;1",
      "@type": "Command",
      "name": "GetPresetId",
      "comment": "GET /profiles/inventory/presets/{presetId}",
      "displayName": {
        "en": "Retrieves the detailed configuration of the specified preset"
      },
      "description": {
        "en": "Retrieves the detailed configuration of the specified preset."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "PresetID",
        "displayName": {
          "en": "Preset ID"
        },
        "description": {
          "en": "The name of a preset."
        },
        "schema": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetId;1"
      },
      "response": {
        "@type": "CommandPayload",
        "name": "InventoryRequest",
        "displayName": {
          "en": "Inventory Request"
        },
        "description": {
          "en": "The detailed configuration of the specified preset."
        },
        "schema": "dtmi:impinj:R700:Profiles:Inventory:Presets:InventoryRequest;1"
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetsId:Set;1",
      "@type": "Command",
      "name": "SetPresetId",
      "comment": "PUT /profiles/inventory/presets/{presetId}",
      "displayName": {
        "en": "Create or replace inventory presets"
      },
      "description": {
        "en": "Creates or replaces a user-defined inventory preset. Presets with names that begin with 'default' or 'impinj' may not be created or replaced."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "presetsIdParam",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "presetId",
              "displayName": {
                "en": "Preset ID"
              },
              "description": {
                "en": "The name of a preset."
              },
              "schema": "string"
            },
            {
              "name": "presetObject",
              "displayName": {
                "en": "Preset Object"
              },
              "description": {
                "en": "The value of the preset you wish to create or replace."
              },
              "schema": "dtmi:impinj:R700:Profiles:Inventory:Presets:InventoryRequest;1"
            }
          ]
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetsId:SetPassthrough;1",
      "@type": "Command",
      "name": "SetPresetIdPassthrough",
      "comment": "PUT /profiles/inventory/presets/{presetId}",
      "displayName": {
        "en": "Create or replace inventory presets with raw JSON string value"
      },
      "description": {
        "en": "Creates or replaces a user-defined inventory preset. Presets with names that begin with 'default' or 'impinj' may not be created or replaced.  This method uses a raw (unparsed) JSON string as the command payload."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "presetsIdParam",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "presetId",
              "displayName": {
                "en": "Preset ID"
              },
              "description": {
                "en": "The name of a preset."
              },
              "schema": "string"
            },
            {
              "name": "presetObjectJSON",
              "displayName": {
                "en": "Preset Object JSON"
              },
              "description": {
                "en": "The value of the preset you wish to create or replace, in raw JSON string form."
              },
              "schema": "string"
            }
          ]
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetsId:Delete;1",
      "@type": "Command",
      "name": "DeletePresetId",
      "comment": "DELETE /profiles/inventory/presets/{presetId}",
      "displayName": {
        "en": "Delete Inventory Presets"
      },
      "description": {
        "en": "Removes a user-defined settings preset for executing inventory."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "presetId",
        "schema": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetId;1"
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets:start;1",
      "@type": "Command",
      "commandType": "synchronous",
      "name": "StartPreset",
      "comment": "POST /profiles/inventory/presets/{presetId}/start",
      "displayName": {
        "en": "Start Preset"
      },
      "description": {
        "en": "Removes a user-defined settings preset for executing inventory."
      },
      "request": {
        "@type": "CommandPayload",
        "displayName": {
          "en": "Preset Id"
        },
        "description": {
          "en": "The name of a preset."
        },
        "name": "presetId",
        "schema": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetId;1"
      }
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Tag;1",
      "@type": "Command",
      "commandType": "synchronous",
      "name": "TagPresenceResponse",
      "comment": "GET /profiles/inventory/tag",
      "displayName": {
        "en": "Checks for the presence of a tag"
      },
      "description": {
        "en": "Returns information on whether the specified tag was seen on the specified antenna in the tag reporting interval. Available only if TagReportingConfiguration feature is enabled. Must specify exactly one tag identifier and one antenna identifier."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "tagParam",
        "displayName": {
          "en": "Tag Presence Parameters"
        },
        "description": {
          "en": "Whether the specified tag was seen on the specified antenna in the reporting interval."
        },
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "epc",
              "displayName": {
                "en": "EPC"
              },
              "description": {
                "en": "The base64url-encoded EPC of the tag of interest."
              },
              "schema": "string"
            },
            {
              "name": "epcHex",
              "displayName": {
                "en": "EPC Hex"
              },
              "description": {
                "en": "The hex-encoded EPC of the tag of interest."
              },
              "schema": "string"
            },
            {
              "name": "tid",
              "displayName": {
                "en": "TID"
              },
              "description": {
                "en": "The base64url-encoded TID of the tag of interest."
              },
              "schema": "string"
            },
            {
              "name": "tidHex",
              "displayName": {
                "en": "TID Hex"
              },
              "description": {
                "en": "The hex-encoded TID of the tag of interest."
              },
              "schema": "string"
            },
            {
              "name": "antennaPort",
              "displayName": {
                "en": "Antenna Port"
              },
              "description": {
                "en": "The port number of the antenna for the tag of interest."
              },
              "schema": "integer"
            },
            {
              "name": "antennaName",
              "displayName": {
                "en": "Antenna Name"
              },
              "description": {
                "en": "Name for the antenna for the tag of interest."
              },
              "schema": "string"
            }
          ]
        }
      },
      "response": {
        "@type": "CommandPayload",
        "name": "isPresent",
        "displayName": {
          "en": "Tag Presence Response"
        },
        "description": {
          "en": "Whether the specified tag was seen on the specified antenna in the reporting interval."
        },
        "schema": "boolean"
      }
    },
    {
      "@id": "dtmi:impinj:R700:SystemInfo;1",
      "@type": "Property",
      "name": "SystemInfo",
      "writable": false,
      "comment": "GET /system",
      "displayName": {
        "en": "Reader Hardware Details"
      },
      "description": {
        "en": "Details about the reader hardware."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "productModel",
            "displayName": {
              "en": "Product Model"
            },
            "description": {
              "en": "The model number of the reader"
            },
            "schema": "string"
          },
          {
            "name": "manufacturer",
            "displayName": {
              "en": "Manufacturer"
            },
            "description": {
              "en": "The reader manufacturer"
            },
            "schema": "string"
          },
          {
            "name": "productDescription",
            "displayName": {
              "en": "Product Description"
            },
            "description": {
              "en": "A short, human-friendly description of the reader"
            },
            "schema": "string"
          },
          {
            "name": "productSku",
            "displayName": {
              "en": "Product SKU"
            },
            "description": {
              "en": "The official product SKU for the reader"
            },
            "schema": "string"
          },
          {
            "name": "productHla",
            "displayName": {
              "en": "Product High-level Assembly Code"
            },
            "description": {
              "en": "The reader's high-level assembly code"
            },
            "schema": "string"
          },
          {
            "name": "pcba",
            "displayName": {
              "en": "PCB Assembly Code"
            },
            "description": {
              "en": "The assembly code for the reader's PCB"
            },
            "schema": "string"
          },
          {
            "name": "serialNumber",
            "displayName": {
              "en": "Serial Number"
            },
            "description": {
              "en": "The serial number of the reader"
            },
            "schema": "string"
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Hostname;1",
      "@type": "Property",
      "name": "Hostname",
      "writable": true,
      "comment": "GET and PUT /system/hostname",
      "displayName": {
        "en": "Reader Host Name"
      },
      "description": {
        "en": "The current hostname of the reader. Note that this is not a fully qualified domain name."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "hostname",
            "displayName": {
              "en": "Host Name"
            },
            "description": {
              "en": "The hostname or the reader. The hostname must conform with RFC-952 and RFC-1123."
            },
            "schema": "string"
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Image;1",
      "@type": "Property",
      "name": "SystemImage",
      "writable": false,
      "comment": "GET /system/image",
      "displayName": {
        "en": "System Image Information"
      },
      "description": {
        "en": "Detailed information about the firmware installed on the reader. Properties are omitted for uninstalled or unavailable partitions."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "primaryFirmware",
            "displayName": {
              "en": "Primary Firmware"
            },
            "description": {
              "en": "The version of the booted firmware."
            },
            "schema": "string"
          },
          {
            "name": "primaryCustomer",
            "displayName": {
              "en": "Primary Customer"
            },
            "description": {
              "en": "The version of the installed and running customer application (CAP)."
            },
            "schema": "string"
          },
          {
            "name": "secondaryFirmware",
            "displayName": {
              "en": "Secondary Firmware"
            },
            "description": {
              "en": "The version of the firmware installed on the secondary partition."
            },
            "schema": "string"
          },
          {
            "name": "secondaryCustomer",
            "displayName": {
              "en": "Secondary Customer"
            },
            "description": {
              "en": "The version of the customer application (CAP) installed on the secondary partition."
            },
            "schema": "string"
          },
          {
            "name": "scmRevision",
            "displayName": {
              "en": "SCM Revision"
            },
            "description": {
              "en": "Unique build hash of primaryFirmware."
            },
            "schema": "string"
          },
          {
            "name": "buildDate",
            "displayName": {
              "en": "Build Date"
            },
            "description": {
              "en": "Timestamp of build for primaryFirmware."
            },
            "schema": "dateTime"
          },
          {
            "name": "buildPlan",
            "displayName": {
              "en": "Build Plan"
            },
            "description": {
              "en": "Traceable build identifier for primaryFirmware."
            },
            "schema": "string"
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Image:Upgrade:Upload;1",
      "@type": "Command",
      "name": "UpgradeUpload",
      "comment": "POST /system/image/upgrade",
      "displayName": {
        "en": "Upload an upgrade file for installation."
      },
      "description": {
        "en": "In order to perform an upgrade, the upgrade file must be uploaded to the reader using this endpoint."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "Request",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "upgradeFile",
              "displayName": {
                "en": "File Path (URL)"
              },
              "description": {
                "en": "URL of upgrade firmware bin file."
              },
              "schema": "string"
            },
            {
              "name": "autoReboot",
              "displayName": {
                "en": "Automatic Reboot"
              },
              "description": {
                "en": "Automatically reboot after upgrade."
              },
              "schema": "boolean"
            }
          ]
        }
      },
      "response": {
        "@type": "CommandPayload",
        "name": "Response",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "message",
              "displayName": {
                "en": "Message"
              },
              "description": {
                "en": "A message with information about the error."
              },
              "schema": "string"
            },
            {
              "name": "invalidPropertyId",
              "displayName": {
                "en": "Invalid Property ID"
              },
              "description": {
                "en": "A schema pointer to the invalid property of the request."
              },
              "schema": "string"
            },
            {
              "name": "detail",
              "displayName": {
                "en": "Detail"
              },
              "description": {
                "en": "Additional details about the error."
              },
              "schema": "string"
            }
          ]
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Image:Upgrade:Status;1",
      "@type": "Property",
      "name": "UpgradeStatus",
      "writable": false,
      "comment": "GET /system/image/upgrade",
      "displayName": {
        "en": "System Image Upgrade Status"
      },
      "description": {
        "en": "Detailed information about the firmware installed on the reader. Properties are omitted for uninstalled or unavailable partitions."
      },
      "schema": "dtmi:impinj:R700:System:Image:Upgrade;1"
    },
    {
      "@id": "dtmi:impinj:R700:System:Image:Upgrade:GetStatus;1",
      "@type": "Command",
      "name": "GetUpgradeStatus",
      "comment": "GET /system/image/upgrade",
      "displayName": {
        "en": "Retrieve System Image Upgrade Status"
      },
      "description": {
        "en": "Retrieve detailed information about the firmware installed on the reader. Properties are omitted for uninstalled or unavailable partitions."
      },
      "response": {
        "@type": "CommandPayload",
        "name": "UpgradeStatus",
        "schema": "dtmi:impinj:R700:System:Image:Upgrade;1"
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Network:Interfaces;1",
      "@type": "Property",
      "name": "NetworkInterface",
      "writable": false,
      "comment": "GET /system/network/interfaces",
      "displayName": {
        "en": "Network Interface"
      },
      "description": {
        "en": "Retrieves the available network interfaces and their current network information."
      },
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "NetworkInterface",
          "schema": "string"
        },
        "mapValue": {
          "name": "NetworkInterfaceValue",
          "schema": "dtmi:impinj:R700:System:Network:Interfaces:NetworkInterface;1"
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Power;1",
      "@type": "Property",
      "name": "PowerConfiguration",
      "writable": false,
      "comment": "GET /system/power",
      "displayName": {
        "en": "Power Configuration"
      },
      "description": {
        "en": "Retrieves the current power configuration on the reader."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "powerSource",
            "displayName": {
              "en": "Power Source"
            },
            "description": {
              "en": "Possible power sources for the reader."
            },
            "schema": "dtmi:impinj:R700:System:Power:PowerConfiguration;1"
          },
          {
            "name": "allocatedPowerMilliwatts",
            "displayName": {
              "en": "Allocated Power in mw"
            },
            "description": {
              "en": "This field is only available when powerSource is set to auto. Contains the actual power that was allocated for the reader by the switch through negotiation."
            },
            "schema": "integer"
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Power:Set;1",
      "@type": "Command",
      "name": "SetPowerConfiguration",
      "comment": "PUT /system/power",
      "displayName": {
        "en": "Set Power Configuration"
      },
      "description": {
        "en": "Retrieves the current power configuration on the reader."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "name",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "powerSource",
              "displayName": {
                "en": "Power Source"
              },
              "description": {
                "en": "Possible power sources for the reader."
              },
              "schema": "dtmi:impinj:R700:System:Power:PowerConfiguration;1"
            }
          ]
        }
      },
      "response": {
        "@type": "CommandPayload",
        "name": "message",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "message",
              "displayName": {
                "en": "Message"
              },
              "description": {
                "en": "The status response message for the operation."
              },
              "schema": "string"
            }
          ]
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Region:Command:Get;1",
      "@type": "Command",
      "name": "GetRegionInfo",
      "displayName": {
        "en": "Retrieve Operating RegionInfo"
      },
      "description": {
        "en": "Retrieves the current operating region and a list of selectable regions for the reader."
      },
      "response": {
        "@type": "CommandPayload",
        "name": "operatingRegion",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "operatingRegion",
              "displayName": {
                "en": "Operating Region"
              },
              "description": {
                "en": "The descriptive name of a regulatory region."
              },
              "schema": "string"
            },
            {
              "name": "selectableRegions",
              "displayName": {
                "en": "Selectable Region"
              },
              "description": {
                "en": "A list of unique selectable regions."
              },
              "schema": {
                "@type": "Array",
                "elementSchema": "string"
              }
            }
          ]
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Region;1",
      "@type": "Property",
      "name": "RegionInfo",
      "writable": true,
      "comment": "PUT /system/region",
      "displayName": {
        "en": "Set Operating RegionInfo"
      },
      "description": {
        "en": "Configures the reader operating region to the specified region. This operation changes the reader RF settings. The operating region must match the country/region of operation to comply with local laws and regulations."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "operatingRegion",
            "displayName": {
              "en": "Operating RegionInfo"
            },
            "description": {
              "en": "The descriptive name of a regulatory region."
            },
            "schema": {
              "@type": "Enum",
              "valueSchema": "string",
              "enumValues": [
                {
                  "name": "Australia920_926MHz",
                  "enumValue": "Australia 920-926 MHz",
                  "displayName": {
                    "en": "Australia 920-926 MHz"
                  }
                },
                {
                  "name": "Brazil902_907and915_928MHz",
                  "enumValue": "Brazil 902-907 and 915-928 MHz",
                  "displayName": {
                    "en": "Brazil 902-907 and 915-928 MHz"
                  }
                },
                {
                  "name": "FCCPart15_247",
                  "enumValue": "FCC Part 15.247",
                  "displayName": {
                    "en": "FCC Part 15.247"
                  }
                },
                {
                  "name": "HongKong920_925MHz",
                  "enumValue": "Hong Kong 920-925 MHz",
                  "displayName": {
                    "en": "Hong Kong 920-925 MHz"
                  }
                },
                {
                  "name": "Korea917_921MHz",
                  "enumValue": "Korea 917-921 MHz",
                  "displayName": {
                    "en": "Korea 917-921 MHz"
                  }
                },
                {
                  "name": "NewZealand921_5_928MHz",
                  "enumValue": "New Zealand 921.5-928 MHz",
                  "displayName": {
                    "en": "New Zealand 921.5-928 MHz"
                  }
                },
                {
                  "name": "None_RFIDDisabled",
                  "enumValue": "None - RFID Disabled",
                  "displayName": {
                    "en": "None - RFID Disabled"
                  }
                },
                {
                  "name": "Philippines918_920MHz",
                  "enumValue": "Philippines 918-920 MHz",
                  "displayName": {
                    "en": "Philippines 918-920 MHz"
                  }
                },
                {
                  "name": "Thailand920_925MHz",
                  "enumValue": "Thailand 920-925 MHz",
                  "displayName": {
                    "en": "Thailand 920-925 MHz"
                  }
                },
                {
                  "name": "Uruguay916_928MHz",
                  "enumValue": "Uruguay 916-928 MHz",
                  "displayName": {
                    "en": "Uruguay 916-928 MHz"
                  }
                },
                {
                  "name": "Vietnam918_923MHz",
                  "enumValue": "Vietnam 918-923 MHz",
                  "displayName": {
                    "en": "Vietnam 918-923 MHz"
                  }
                },
                {
                  "name": "Vietnam920_923MHz",
                  "enumValue": "Vietnam 920-923 MHz",
                  "displayName": {
                    "en": "Vietnam 920-923 MHz"
                  }
                },
                {
                  "name": "errorTest",
                  "enumValue": "errorTest",
                  "displayName": {
                    "en": "For testing"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Reboot;1",
      "@type": "Command",
      "name": "Reboot",
      "comment": "POST /system/reboot",
      "displayName": {
        "en": "Reboot"
      },
      "description": {
        "en": "Reboot the system."
      },
      "response": {
        "@type": "CommandPayload",
        "name": "StatusResponse",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "message",
              "displayName": {
                "en": "The status response message"
              },
              "description": {
                "en": "The status response message for the operation."
              },
              "schema": "string"
            }
          ]
        }
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Rfid:Llrp;1",
      "@type": "Property",
      "name": "LlrpStatus",
      "writable": false,
      "comment": "GET /system/rfid/llrp",
      "displayName": {
        "en": "LLRP Status"
      },
      "description": {
        "en": "The current status of the LLRP interface."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "llrpRfidStatus",
            "displayName": {
              "en": "LLRP RFID Status"
            },
            "description": {
              "en": "General LLRP and connection status."
            },
            "schema": {
              "@type": "Enum",
              "valueSchema": "string",
              "enumValues": [
                {
                  "name": "idle",
                  "enumValue": "idle",
                  "displayName": {
                    "en": "Idle"
                  }
                },
                {
                  "name": "enabled",
                  "enumValue": "enabled",
                  "displayName": {
                    "en": "Enabled"
                  }
                },
                {
                  "name": "active",
                  "enumValue": "active",
                  "displayName": {
                    "en": "Active"
                  }
                }
              ]
            }
          },
          {
            "name": "LlrpConnection",
            "displayName": {
              "en": "LLRP Connection"
            },
            "description": {
              "en": "A list of unique selectable regions."
            },
            "schema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "status",
                  "displayName": {
                    "en": "Status"
                  },
                  "description": {
                    "en": "The status of the LLRP connection."
                  },
                  "schema": {
                    "@type": "Enum",
                    "valueSchema": "string",
                    "enumValues": [
                      {
                        "name": "disabled",
                        "enumValue": "disabled",
                        "displayName": {
                          "en": "Disabled"
                        }
                      },
                      {
                        "name": "connected",
                        "enumValue": "connected",
                        "displayName": {
                          "en": "Connected"
                        }
                      },
                      {
                        "name": "disconnected",
                        "enumValue": "disconnected",
                        "displayName": {
                          "en": "Disconnected"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "peerAddress",
                  "displayName": {
                    "en": "Peer Address"
                  },
                  "description": {
                    "en": "IP address of the connected device. Will contain either an IPv4 address in dot-decimal format, or an IPv6 address compliant with RFC-5952. Will only be present if status is connected."
                  },
                  "schema": "string"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Rfid:interface;1",
      "@type": "Property",
      "name": "RfidInterface",
      "writable": true,
      "comment": "GET and PUT /system/rfid/interface",
      "displayName": {
        "en": "The reader API"
      },
      "description": {
        "en": "The application programming interface (API) that is currently being used to control the reader RFID operations."
      },
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "rfidInterface",
            "displayName": {
              "en": "RFID Interface"
            },
            "description": {
              "en": "An enumeration of interfaces that are supported by the reader."
            },
            "schema": {
              "@type": "Enum",
              "valueSchema": "string",
              "enumValues": [
                {
                  "name": "llrp",
                  "enumValue": "llrp",
                  "displayName": {
                    "en": "LLRP"
                  }
                },
                {
                  "name": "rest",
                  "enumValue": "rest",
                  "displayName": {
                    "en": "RESTFul API"
                  }
                },
                {
                  "name": "errorTest",
                  "enumValue": "errorTest",
                  "displayName": {
                    "en": "For testing"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Time;1",
      "@type": "Property",
      "name": "TimeInfo",
      "writable": false,
      "comment": "GET /system/time",
      "displayName": {
        "en": "System time and uptime"
      },
      "description": {
        "en": "The information about system time and uptime. System time is in UTC and RFC-3339 compliant format. Uptime indicates how long the system has been running in seconds."
      },
      "schema": "dtmi:impinj:R700:System:Time:TimeInfo;1"
    },
    {
      "@id": "dtmi:impinj:R700:System:Time:Command:Get;1",
      "@type": "Command",
      "name": "GetTimeInfo",
      "displayName": {
        "en": "Retrieve System time and uptime"
      },
      "description": {
        "en": "Retrieves information about system time and uptime. System time is in UTC and RFC-3339 compliant format. Uptime indicates how long the system has been running in seconds."
      },
      "response": {
        "@type": "CommandPayload",
        "name": "TimeInfo",
        "schema": "dtmi:impinj:R700:System:Time:TimeInfo;1"
      }
    },
    {
      "@id": "dtmi:impinj:R700:System:Time:Command:Set;1",
      "@type": "Command",
      "name": "SetTimeInfo",
      "displayName": {
        "en": "Set System time and uptime"
      },
      "description": {
        "en": "Retrieves information about system time and uptime. System time is in UTC and RFC-3339 compliant format. Uptime indicates how long the system has been running in seconds."
      },
      "request": {
        "@type": "CommandPayload",
        "name": "systemTime",
        "displayName": {
          "en": "System Time"
        },
        "description": {
          "en": "The new system time to be set in UTC and RFC-3339 format."
        },
        "schema": "dateTime"
      }
    }
  ],
  "schemas": [
    {
      "@id": "dtmi:impinj:R700:Mqtt:QoS;1",
      "@type": "Enum",
      "valueSchema": "integer",
      "enumValues": [
        {
          "name": "qos0",
          "enumValue": 0,
          "displayName": {
            "en": "QoS 0: At most once delivery"
          }
        },
        {
          "name": "qos1",
          "enumValue": 1,
          "displayName": {
            "en": "QoS 1: At least once delivery"
          }
        },
        {
          "name": "qos2",
          "enumValue": 2,
          "displayName": {
            "en": "QoS 2: Exactly once delivery"
          }
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:Status;1",
      "@type": "Object",
      "fields": [
        {
          "name": "activePreset",
          "displayName": {
            "en": "Active Presets"
          },
          "description": {
            "en": "The running preset. If no preset is running, this property is not included in the status response."
          },
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "name": "id",
                "displayName": {
                  "en": "Preset ID"
                },
                "description": {
                  "en": "The profile preset identifier."
                },
                "schema": "string"
              },
              {
                "name": "profile",
                "displayName": {
                  "en": "Profile"
                },
                "description": {
                  "en": "The profile preset identifier."
                },
                "schema": "string"
              }
            ]
          }
        },
        {
          "name": "deviceStatus",
          "displayName": {
            "en": "Status"
          },
          "description": {
            "en": "Indicates whether an RFID operation is currently running on the reader (running), is currently not running an RFID operation, but is waiting to be triggered (armed), or is not running an RFID operation and is not waiting to be triggered (idle)."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "running",
                "enumValue": "running",
                "displayName": {
                  "en": "Running"
                }
              },
              {
                "name": "armed",
                "enumValue": "armed",
                "displayName": {
                  "en": "Armed"
                }
              },
              {
                "name": "idle",
                "enumValue": "idle",
                "displayName": {
                  "en": "Idle"
                }
              }
            ]
          }
        },
        {
          "name": "time",
          "displayName": {
            "en": "System Time"
          },
          "description": {
            "en": "The current, system time on the reader."
          },
          "schema": "dateTime"
        },
        {
          "name": "serialNumber",
          "displayName": {
            "en": "Serial Number"
          },
          "description": {
            "en": "The serial number of the reader."
          },
          "schema": "string"
        },
        {
          "name": "mqttBrokerConnectionStatus",
          "displayName": {
            "en": "MQTT Broker Connection Status"
          },
          "description": {
            "en": "The connection status to the MQTT broker."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "connected",
                "enumValue": "connected",
                "displayName": {
                  "en": "Connected"
                }
              },
              {
                "name": "disconnected",
                "enumValue": "disconnected",
                "displayName": {
                  "en": "Disconnected"
                }
              }
            ]
          }
        },
        {
          "name": "mqttTlsAuthentication",
          "displayName": {
            "en": "MQTT TLS Authentication"
          },
          "description": {
            "en": "The Secure-MQTT authentication and encryption status. none – server not authenticated, no encryption. server – server authenticated, TLS encryption."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "none",
                "enumValue": "none",
                "displayName": {
                  "en": "Server Not Authenticated"
                }
              },
              {
                "name": "server",
                "enumValue": "server",
                "displayName": {
                  "en": "Server Authenticated, TSL Encryption"
                }
              }
            ]
          }
        },
        {
          "name": "kafkaClusterConnectionStatus",
          "displayName": {
            "en": "Kafka Cluster Connection Status"
          },
          "description": {
            "en": "The connection status to the Kafka cluster. connected – The device is connected to at least one broker in the Kafka cluster. disconnected – The device is not connected to any brokers within the Kafka cluster."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "connected",
                "enumValue": "connected",
                "displayName": {
                  "en": "The device is connected to the Kafka cluster"
                }
              },
              {
                "name": "disconnected",
                "enumValue": "disconnected",
                "displayName": {
                  "en": "The device is not connected"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:HttpStream:StreamConfiguration;1",
      "@type": "Object",
      "fields": [
        {
          "name": "eventBufferSize",
          "displayName": {
            "en": "Event Buffer Size"
          },
          "description": {
            "en": "Number of events that can be stored on the reader waiting for future delivery. If the bufferSize is 0 then no buffer is created and no history will be saved."
          },
          "schema": "integer"
        },
        {
          "name": "eventPerSecondLimit",
          "displayName": {
            "en": "Event Per Second Limit"
          },
          "description": {
            "en": "Maximum number of events that may be delivered per second. This setting can be used to throttle the delivery of events during peak transmission times such as when replaying history during a new connection. Care should be taken to not set this value lower than the normal event generation rate of the reader or the queue attached to the HTTP stream will fill up and events will be purged. A value of Zero (0) means that no eventsPerSecondLimit is applied."
          },
          "schema": "integer"
        },
        {
          "name": "eventAgeLimitMinutes",
          "displayName": {
            "en": "Event Age Limit Muniutes"
          },
          "description": {
            "en": "Maximum age of any event in the history buffer. Any event older than this will be purged automatically from the buffer without the generation of an OverflowEvent. Use this value to configure the maximum event lifetime for the history buffer."
          },
          "schema": "integer"
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:Kafka:KafkaBootstrapServerConfiguration;1",
      "@type": "Object",
      "fields": [
        {
          "name": "hostname",
          "displayName": {
            "en": "Hostname"
          },
          "description": {
            "en": "The hostname to use for connecting to the Kafka broker."
          },
          "schema": "string"
        },
        {
          "name": "port",
          "displayName": {
            "en": "Port"
          },
          "description": {
            "en": "The TCP port to use for connecting to the Kafka broker."
          },
          "schema": "integer"
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets:PresetId;1",
      "@type": "Object",
      "fields": [
        {
          "name": "presetId",
          "displayName": {
            "en": "Preset ID"
          },
          "description": {
            "en": "The name of a preset."
          },
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:Profiles:Inventory:Presets:InventoryRequest;1",
      "@type": "Object",
      "fields": [
        {
          "name": "eventConfig",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "name": "common",
                "schema": {
                  "@type": "Object",
                  "fields": [
                    {
                      "name": "hostname",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "name": "tagInventory",
                "schema": {
                  "@type": "Object",
                  "fields": [
                    {
                      "name": "tagReporting",
                      "schema": {
                        "@type": "Object",
                        "fields": [
                          {
                            "name": "reportingIntervalSeconds",
                            "schema": "integer"
                          },
                          {
                            "name": "tagCacheSize",
                            "schema": "integer"
                          },
                          {
                            "name": "antennaIdentifier",
                            "schema": {
                              "@type": "Enum",
                              "valueSchema": "string",
                              "enumValues": [
                                {
                                  "name": "antennaPort",
                                  "enumValue": "antennaPort",
                                  "displayName": {
                                    "en": "AntennaPort"
                                  }
                                },
                                {
                                  "name": "antennaName",
                                  "enumValue": "antennaName",
                                  "displayName": {
                                    "en": "AntennaName"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "tagIdentifier",
                            "schema": {
                              "@type": "Enum",
                              "valueSchema": "string",
                              "enumValues": [
                                {
                                  "name": "epc",
                                  "enumValue": "epc",
                                  "displayName": {
                                    "en": "EPC"
                                  }
                                },
                                {
                                  "name": "tid",
                                  "enumValue": "tid",
                                  "displayName": {
                                    "en": "TID"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "epc",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "epcHex",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "tid",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "tidHex",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "antennaPort",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "transmitPowerCdbm",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "peakRssiCdbm",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "frequency",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "pc",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "lastSeenTime",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "phaseAngle",
                      "schema": {
                        "@type": "Enum",
                        "valueSchema": "string",
                        "enumValues": [
                          {
                            "name": "disabled",
                            "enumValue": "disabled",
                            "displayName": {
                              "en": "Disabled"
                            }
                          },
                          {
                            "name": "enabled",
                            "enumValue": "enabled",
                            "displayName": {
                              "en": "Enabled"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "antennaConfigs",
          "comment": "Keep this with minimum required field",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "antennaPort",
                  "schema": "integer"
                },
                {
                  "name": "transmitPowerCdbm",
                  "schema": "integer"
                },
                {
                  "name": "rfMode",
                  "schema": "integer"
                },
                {
                  "name": "inventorySession",
                  "schema": "integer"
                },
                {
                  "name": "inventorySearchMode",
                  "schema": {
                    "@type": "Enum",
                    "valueSchema": "string",
                    "enumValues": [
                      {
                        "name": "single_target",
                        "enumValue": "single-target",
                        "displayName": {
                          "en": "single-target"
                        }
                      },
                      {
                        "name": "dual_target",
                        "enumValue": "dual-target",
                        "displayName": {
                          "en": "dual-target"
                        }
                      },
                      {
                        "name": "single_target_with_tagfocus",
                        "enumValue": "single-target-with-tagfocus",
                        "displayName": {
                          "en": "single-target-with-tagfocus"
                        }
                      },
                      {
                        "name": "single_target_b_to_a",
                        "enumValue": "single-target-b-to-a",
                        "displayName": {
                          "en": "single-target-b-to-a"
                        }
                      },
                      {
                        "name": "dual_target_with_b_to_a_select",
                        "enumValue": "dual-target-with-b-to-a-select",
                        "displayName": {
                          "en": "dual-target-with-b-to-a-select"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "estimatedTagPopulation",
                  "schema": "integer"
                }
              ]
            }
          }
        },
        {
          "name": "channelFrequenciesKHz",
          "schema": "integer"
        },
        {
          "name": "startTriggers",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "gpiTransitionEvent",
                  "schema": {
                    "@type": "Object",
                    "fields": [
                      {
                        "name": "gpi",
                        "schema": "integer"
                      },
                      {
                        "name": "transition",
                        "schema": {
                          "@type": "Enum",
                          "valueSchema": "string",
                          "enumValues": [
                            {
                              "name": "high_to_low",
                              "enumValue": "high-to-low",
                              "displayName": {
                                "en": "high-to-low"
                              }
                            },
                            {
                              "name": "low_to_high",
                              "enumValue": "low-to-high",
                              "displayName": {
                                "en": "low-to-high"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        {
          "name": "stopTriggers",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "gpiTransitionEvent",
                  "schema": {
                    "@type": "Object",
                    "fields": [
                      {
                        "name": "gpi",
                        "schema": "integer"
                      },
                      {
                        "name": "transition",
                        "schema": {
                          "@type": "Enum",
                          "valueSchema": "string",
                          "enumValues": [
                            {
                              "name": "high_to_low",
                              "enumValue": "high-to-low",
                              "displayName": {
                                "en": "high-to-low"
                              }
                            },
                            {
                              "name": "low_to_high",
                              "enumValue": "low-to-high",
                              "displayName": {
                                "en": "low-to-high"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:System:Image:Upgrade;1",
      "@type": "Object",
      "fields": [
        {
          "name": "upgradeStatus",
          "displayName": {
            "en": "Status"
          },
          "description": {
            "en": "Indicates what state the upgrade process is in."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "ready",
                "enumValue": "ready",
                "displayName": {
                  "en": "Ready"
                }
              },
              {
                "name": "verifying",
                "enumValue": "verifying",
                "displayName": {
                  "en": "Verifying"
                }
              },
              {
                "name": "installing",
                "enumValue": "installing",
                "displayName": {
                  "en": "Installing"
                }
              },
              {
                "name": "successful",
                "enumValue": "successful",
                "displayName": {
                  "en": "Successful"
                }
              },
              {
                "name": "failed",
                "enumValue": "failed",
                "displayName": {
                  "en": "Failed"
                }
              }
            ]
          }
        },
        {
          "name": "message",
          "displayName": {
            "en": "Message"
          },
          "description": {
            "en": "Indicates what state the upgrade process is in."
          },
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:System:Network:Interfaces:NetworkInterface;1",
      "@type": "Object",
      "fields": [
        {
          "name": "interfaceId",
          "displayName": {
            "en": "Interface Id"
          },
          "description": {
            "en": "A unique identifier of the network interface assigned by the reader."
          },
          "schema": "integer"
        },
        {
          "name": "interfaceName",
          "displayName": {
            "en": "Interface Name"
          },
          "description": {
            "en": "The name of the network interface."
          },
          "schema": "string"
        },
        {
          "name": "status",
          "displayName": {
            "en": "Status"
          },
          "description": {
            "en": "The state of the network interface"
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "connected",
                "enumValue": "connected",
                "displayName": {
                  "en": "Connected"
                }
              },
              {
                "name": "disconnected",
                "enumValue": "disconnected",
                "displayName": {
                  "en": "Disconnected"
                }
              }
            ]
          }
        },
        {
          "name": "networkAddress",
          "displayName": {
            "en": "Network Addresses"
          },
          "description": {
            "en": "The current IPv4 and/or IPv6 network addresses on the interface."
          },
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "NetworkAddress",
              "schema": "string"
            },
            "mapValue": {
              "name": "NetworkAddressValue",
              "schema": "dtmi:impinj:R700:System:Network:Interfaces:NetworkInterface:NetworkAddress;1"
            }
          }
        },
        {
          "name": "hardwareAddress",
          "displayName": {
            "en": "Hardware Address"
          },
          "description": {
            "en": "The hardware or MAC address associated with the network interface."
          },
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:System:Network:Interfaces:NetworkInterface:NetworkAddress;1",
      "@type": "Object",
      "fields": [
        {
          "name": "protocol",
          "displayName": {
            "en": "Protocol"
          },
          "description": {
            "en": "An enumeration of network protocols that are supported by the reader."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "ipv4",
                "enumValue": "ipv4",
                "displayName": {
                  "en": "IP v4"
                }
              },
              {
                "name": "ipv6",
                "enumValue": "ipv6",
                "displayName": {
                  "en": "IP v6"
                }
              }
            ]
          }
        },
        {
          "name": "address",
          "displayName": {
            "en": "Address"
          },
          "description": {
            "en": "The IP address of the interface. Could be either an IPv4 address in dot-decimal format or an IPv6 address compliant with RFC-5952. The protocol property provides the expected network protocol version of the address."
          },
          "schema": "string"
        },
        {
          "name": "prefix",
          "displayName": {
            "en": "Network Prefix"
          },
          "description": {
            "en": "The network prefix length of the interface. A typical value is 24 for IPv4 and 64 for IPv6."
          },
          "schema": "integer"
        },
        {
          "name": "gateway",
          "displayName": {
            "en": "Gateway Address"
          },
          "description": {
            "en": "The gateway address of the interface. Could be either an IPv4 address in dot-decimal format or an IPv6 address compliant with RFC-5952."
          },
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:System:Power:PowerConfiguration;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "name": "auto",
          "enumValue": "auto",
          "displayName": {
            "en": "Auto"
          }
        },
        {
          "name": "poe",
          "enumValue": "poe",
          "displayName": {
            "en": "POE"
          }
        },
        {
          "name": "poeplus",
          "enumValue": "poeplus",
          "displayName": {
            "en": "POE Plus"
          }
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:System:Region:RegionInfo;1",
      "description": "For refactoring later",
      "@type": "Object",
      "fields": [
        {
          "name": "operatingRegion",
          "displayName": {
            "en": "Operating RegionInfo"
          },
          "description": {
            "en": "The descriptive name of a regulatory region."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "Australia920_926MHz",
                "enumValue": "Australia9 20-926 MHz",
                "displayName": {
                  "en": "Australia 920-926 MHz"
                }
              },
              {
                "name": "Brazil902_907and915_928MHz",
                "enumValue": "Brazil 902-907 and 915-928 MHz",
                "displayName": {
                  "en": "Brazil 902-907 and 915-928 MHz"
                }
              },
              {
                "name": "FCCPart15_247",
                "enumValue": "FCC Part 15.247",
                "displayName": {
                  "en": "FCC Part 15.247"
                }
              },
              {
                "name": "HongKong920_925MHz",
                "enumValue": "Hong Kong 920-925 MHz",
                "displayName": {
                  "en": "Hong Kong 920-925 MHz"
                }
              },
              {
                "name": "Korea917_921MHz",
                "enumValue": "Korea 917-921 MHz",
                "displayName": {
                  "en": "Korea 917-921 MHz"
                }
              },
              {
                "name": "NewZealand921_5_928MHz",
                "enumValue": "New Zealand 921.5-928 MHz",
                "displayName": {
                  "en": "New Zealand 921.5-928 MHz"
                }
              },
              {
                "name": "None_RFIDDisabled",
                "enumValue": "None - RFID Disabled",
                "displayName": {
                  "en": "None - RFID Disabled"
                }
              },
              {
                "name": "Philippines918_920MHz",
                "enumValue": "Philippines 918-920 MHz",
                "displayName": {
                  "en": "Philippines 918-920 MHz"
                }
              },
              {
                "name": "Thailand920_925MHz",
                "enumValue": "Thailand 920-925 MHz",
                "displayName": {
                  "en": "Thailand 920-925 MHz"
                }
              },
              {
                "name": "Uruguay916_928MHz",
                "enumValue": "Uruguay 916-928 MHz",
                "displayName": {
                  "en": "Uruguay 916-928 MHz"
                }
              },
              {
                "name": "Vietnam918_923MHz",
                "enumValue": "Vietnam 918-923 MHz",
                "displayName": {
                  "en": "Vietnam 918-923 MHz"
                }
              },
              {
                "name": "Vietnam920_923MHz",
                "enumValue": "Vietnam 920-923 MHz",
                "displayName": {
                  "en": "Vietnam 920-923 MHz"
                }
              },
              {
                "name": "errorTest",
                "enumValue": "errorTest",
                "displayName": {
                  "en": "For testing"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:System:Rfid:interface:RfidInterface;1",
      "@type": "Object",
      "comment": "For refactoring later",
      "fields": [
        {
          "name": "rfidInterface",
          "displayName": {
            "en": "RFID Interface"
          },
          "description": {
            "en": "An enumeration of interfaces that are supported by the reader."
          },
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "llrp",
                "enumValue": "llrp",
                "displayName": {
                  "en": "LLRP"
                }
              },
              {
                "name": "rest",
                "enumValue": "rest",
                "displayName": {
                  "en": "RESTFul API"
                }
              },
              {
                "name": "errorTest",
                "enumValue": "errorTest",
                "displayName": {
                  "en": "For testing"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:System:Time:TimeInfo;1",
      "@type": "Object",
      "fields": [
        {
          "name": "systemTime",
          "displayName": {
            "en": "System Time"
          },
          "description": {
            "en": "The current system time in UTC and RFC-3339 compliant format. Time precision is at second-level accuracy."
          },
          "schema": "string"
        },
        {
          "name": "upTime",
          "displayName": {
            "en": "System Uptime"
          },
          "description": {
            "en": "The number of seconds that the system has been running."
          },
          "schema": "integer"
        }
      ]
    },
    {
      "@id": "dtmi:impinj:R700:antennaConfig;1",
      "@type": "Object",
      "fields": [
        {
          "name": "antennaName",
          "schema": "string"
        },
        {
          "name": "antennaPort",
          "schema": "integer"
        },
        {
          "name": "transmitPowerCdbm",
          "schema": "integer"
        },
        {
          "name": "rfMode",
          "schema": "integer"
        },
        {
          "name": "inventorySession",
          "schema": "integer"
        },
        {
          "name": "inventorySearchMode",
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "single_target",
                "enumValue": "single-target",
                "displayName": {
                  "en": "single-target"
                }
              },
              {
                "name": "dual_target",
                "enumValue": "dual-target",
                "displayName": {
                  "en": "dual-target"
                }
              },
              {
                "name": "single_target_with_tagfocus",
                "enumValue": "single-target-with-tagfocus",
                "displayName": {
                  "en": "single-target-with-tagfocus"
                }
              },
              {
                "name": "single_target_b_to_a",
                "enumValue": "single-target-b-to-a",
                "displayName": {
                  "en": "single-target-b-to-a"
                }
              },
              {
                "name": "dual_target_with_b_to_a_select",
                "enumValue": "dual-target-with-b-to-a-select",
                "displayName": {
                  "en": "dual-target-with-b-to-a-select"
                }
              }
            ]
          }
        },
        {
          "name": "estimatedTagPopulation",
          "schema": "integer"
        },
        {
          "name": "filtering",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "name": "filters",
                "schema": {
                  "@type": "Array",
                  "elementSchema": {
                    "@type": "Object",
                    "fields": [
                      {
                        "name": "action",
                        "schema": {
                          "@type": "Enum",
                          "valueSchema": "string",
                          "enumValues": [
                            {
                              "name": "include",
                              "enumValue": "include",
                              "displayName": {
                                "en": "include"
                              }
                            },
                            {
                              "name": "exclude",
                              "enumValue": "exclude",
                              "displayName": {
                                "en": "exclude"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "tagMemoryBank",
                        "schema": {
                          "@type": "Enum",
                          "valueSchema": "string",
                          "enumValues": [
                            {
                              "name": "epc",
                              "enumValue": "epc",
                              "displayName": {
                                "en": "epc"
                              }
                            },
                            {
                              "name": "tid",
                              "enumValue": "tid",
                              "displayName": {
                                "en": "tid"
                              }
                            },
                            {
                              "name": "user",
                              "enumValue": "user",
                              "displayName": {
                                "en": "user"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "bitOffset",
                        "schema": "integer"
                      },
                      {
                        "name": "mask",
                        "schema": "string"
                      },
                      {
                        "name": "maskLength",
                        "schema": "integer"
                      }
                    ]
                  }
                }
              },
              {
                "name": "filterLink",
                "schema": {
                  "@type": "Enum",
                  "valueSchema": "string",
                  "enumValues": [
                    {
                      "name": "union",
                      "enumValue": "union",
                      "displayName": {
                        "en": "union"
                      }
                    },
                    {
                      "name": "intersection",
                      "enumValue": "intersection",
                      "displayName": {
                        "en": "intersection"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "powerSweeping",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "name": "minimumPowerCdbm",
                "schema": "integer"
              },
              {
                "name": "stepSizeCdb",
                "schema": "integer"
              }
            ]
          }
        },
        {
          "name": "fastId",
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "disabled",
                "enumValue": "disabled",
                "displayName": {
                  "en": "Disabled"
                }
              },
              {
                "name": "enabled",
                "enumValue": "enabled",
                "displayName": {
                  "en": "Enabled"
                }
              }
            ]
          }
        },
        {
          "name": "receiveSensitivityDbm",
          "schema": "integer"
        },
        {
          "name": "tagAuthentication",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "name": "messageHex",
                "schema": "string"
              }
            ]
          }
        },
        {
          "name": "tagMemoryReads",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "name": "memoryBank",
                  "schema": {
                    "@type": "Enum",
                    "valueSchema": "string",
                    "enumValues": [
                      {
                        "name": "epc",
                        "enumValue": "epc",
                        "displayName": {
                          "en": "epc"
                        }
                      },
                      {
                        "name": "tid",
                        "enumValue": "tid",
                        "displayName": {
                          "en": "tid"
                        }
                      },
                      {
                        "name": "user",
                        "enumValue": "user",
                        "displayName": {
                          "en": "user"
                        }
                      },
                      {
                        "name": "reserved",
                        "enumValue": "reserved",
                        "displayName": {
                          "en": "reserved"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "wordOffset",
                  "schema": "integer"
                },
                {
                  "name": "wordCount",
                  "schema": "integer"
                }
              ]
            }
          }
        },
        {
          "name": "tagAccessPasswordHex",
          "schema": "string"
        }
      ]
    }
  ]
}